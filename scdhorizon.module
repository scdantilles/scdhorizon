<?php

function scdhorizon_help($path, $arg) {
  switch ($path) {
    case "admin/help#scdhorizon":
      return '<p>' . t("Help text") . '</p>';
      break;
  }
} 

function scdhorizon_menu() {
  $items['user/%user/currentdocs'] = array(
        'title' => t('Documents en cours'),
        'page callback' => 'scdhorizon_currentdocs',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_LOCAL_TASK,
  );  

  $items['quitus'] = array(
        'title' => t('Demander un quitus'),
        'page callback' => 'scdhorizon_quitus',
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
  );  

  $items['quitus/download'] = array(
        'title' => t('Télécharger un quitus'),
        'page callback' => 'scdhorizon_quitus_download',
        'access callback' => scdhorizon_quitus_access(),
        'type' => MENU_NORMAL_ITEM,
  );  

  return $items;
}

function scdhorizon_quitus_access() {
  global $user;
  $userfields = user_load($user->uid);

  if (!array_key_exists('und', $userfields->field_horizon_uid))
    return false;

  $bn = $userfields->field_horizon_uid['und'][0]['value'];

  global $databases;
  $H = $databases['horizon']['default'];
  $dbh = new PDO($H['driver'].":host=".$H['host'].":".$H['port'].";dbname=".$H['database'], $H['username'], $H['password']);
  
  $sth = $dbh->prepare("SELECT convert(varchar(10),dateadd(dd,last_cko_date, convert(date, '01/01/1970')),3),location,title,convert(varchar(10),dateadd(dd,due_date, convert(date, '01/01/1970')),3) FROM item_with_borrower WHERE borrower#=$bn");
  
  $sth->execute();
  
  $docs = $sth->fetchAll();

  if (count($docs))
    return false;
  
  $sth = $dbh->prepare("select * from burb where borrower#=$bn and block in ('l','Note', 'suspend', 'od', 'notice1', 'notice2', 'notice3', 'notice4', 'rn', 'final', 'frais', 'quitus', 'refund', 'fee')");
  
  $sth->execute();
  
  $blockages = $sth->fetchAll();
  
  if (count($blockages))
    return false;

  return true;
}

function quitus_header(&$tcpdf) {
  $tcpdf->SetY(25);
  $tcpdf->Image(dirname(__FILE__).'/images/buag.jpg', null, null, 50, null, 'JPG', '', '', true, 150, '', false, false, 0, false, false, false);
  $tcpdf->Image(dirname(__FILE__).'/images/univ-ag.jpg', null, null, 50, null, 'JPG', '', 'T', false, 150, 'R', false, false, 0, 'false', false, false);
}

function scdhorizon_quitus_download() {
  global $user;
  $userfields = user_load($user->uid);

  if (!array_key_exists('und', $userfields->field_horizon_uid))
    return false;

  $bn = $userfields->field_horizon_uid['und'][0]['value'];

  $oldLocale = setlocale(LC_TIME, '0');
  setlocale(LC_TIME, 'fr_FR.UTF8', 'fr.UTF8', 'fr_FR.UTF-8', 'fr.UTF-8');

  $tcpdf = tcpdf_get_instance();

  $tcpdf->DrupalInitialize(array(
    'footer' => array(
      'html' => 'This is the <em>footer</em>',
    ),
    'header' => array(
      'callback' => 'quitus_header',
    ),
  ));

  $tcpdf->setPrintFooter(false);
  $tcpdf->SetFont('helvetica', '', 11, '', true);
  $tcpdf->SetMargins(PDF_MARGIN_LEFT*2.5, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT*2.5);
  $tcpdf->SetHeaderMargin(PDF_MARGIN_HEADER*2);
  $tcpdf->setJPEGQuality(75);

  $tcpdf->SetY(100);

  $tcpdf->writeHTML("
    <p>Objet: QUITUS</p>
    <br>
    <p>Le Directeur du Service commun de la documentation de l’Université des Antilles certifie que $user->name (INE:  {INE}) est quitte de toute obligation envers les bibliothèques universitaires de l’Université des Antilles et que le dernier ouvrage emprunté a été rendu.</p>
    <p>Pointe-à-Pitre, le ".strftime("%e %B %Y" ,time())."</p>
    <p>S. HOUDEBERT,<br>Directeur du Service commun de la documentation</p>
    <br>
    <br>
  ");

  $tcpdf->Image(dirname(__FILE__).'/images/sign.jpg', null, null, 50, null, 'JPG', '', 'T', false, 150, 'R', false, false, 0, false, false, false);

  $pdf = $tcpdf->Output('', 'S');

  if (!$pdf) {
    return t('An error occured.');
  }

  global $databases;
  $H = $databases['horizon']['default'];
  $dbh = new PDO($H['driver'].":host=".$H['host'].":".$H['port'].";dbname=".$H['database'], $H['username'], $H['password']);

  $days = floor(mktime()/(24*60*60));
  $minutes = floor((mktime() - mktime(0, 0, 0))/60);

  $sth = $dbh->prepare("INSERT INTO burb (block, borrower#, date, time) VALUES ('quitus', $bn, $days, $minutes);");
  
  $sth->execute();

  header('Content-Type: application/pdf');
  header('Content-Length: ' . strlen($pdf));
  header('Content-Disposition: attachment; filename="quitus.pdf"');
  print $pdf;

  setlocale(LC_TIME, $oldLocale);

  return NULL;
}


function scdhorizon_quitus() {

  $candeliver = true;
  global $user;
  $userfields = user_load($user->uid);

  $out = "<h2>Vérifications:</h2>";

  if (array_key_exists('und', $userfields->field_horizon_uid))
  {
    $bn = $userfields->field_horizon_uid['und'][0]['value'];
    $out .= "<p class=\"text-success\"><span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span> Inscription à la BU trouvée.</p>";
  }
  else
  {
    $out .= "<p class=\"text-danger\"><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span> Votre inscription à la BU n'a pas été trouvée.</p>";
    $candeliver = false;
  }

  if (isset($bn)) {
  
    global $databases;
    $H = $databases['horizon']['default'];
    $dbh = new PDO($H['driver'].":host=".$H['host'].":".$H['port'].";dbname=".$H['database'], $H['username'], $H['password']);
  
    $sth = $dbh->prepare("SELECT convert(varchar(10),dateadd(dd,last_cko_date, convert(date, '01/01/1970')),3),location,title,convert(varchar(10),dateadd(dd,due_date, convert(date, '01/01/1970')),3) FROM item_with_borrower WHERE borrower#=$bn");
  
    $sth->execute();
  
    $docs = $sth->fetchAll();
  
    if (! count($docs))
    {
      $out .= "<p class=\"text-success\"><span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span> Aucun document en prêt.</p>";
    }
    else
    {
      $out .= "<p class=\"text-danger\"><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span> Vous avez des documents sur votre compte.</p>";
      $candeliver = false;
    }
  
    $sth = $dbh->prepare("select * from burb where borrower#=$bn and block in ('l','Note', 'suspend', 'od', 'notice1', 'notice2', 'notice3', 'notice4', 'rn', 'final', 'frais', 'quitus', 'refund', 'fee')");
  
    $sth->execute();
  
    $blockages = $sth->fetchAll();
  
    if (! count($blockages))
    {
      $out .= "<p class=\"text-success\"><span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span> Aucun blocage.</p>";
    }
    else
    {
      $out .= "<p class=\"text-danger\"><span class=\"glyphicon glyphicon-remove\" aria-hidden=\"true\"></span> Votre compte fait l'objet d'un ou plusieurs blocages.</p>";
      $candeliver = false;
    }
  
    $dbh = null;
  }

  if ($candeliver) {
    $out .= "<p><a href=\"/quitus/download\" type=\"button\" class=\"btn btn-primary\">Cloturer votre compte et obtenir le quitus</a></p>";
  }
  else
  {
    $out .= "<p>Nous ne pouvons pas cloturer votre compte en l'état. Merci de prendre contact avec votre bibliothèque :</p>";
    $out .= drupal_render(drupal_get_form('scdhorizon_contact_form'));
  }

  return $out;
}

function scdhorizon_contact_form($form_state) {
  $form['message'] = array(
    '#type' => 'textarea',
    '#title' => t('Message'),
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Envoyer',
  );

  return $form;
}

function scdhorizon_contact_form_submit($form, &$form_state) {
  $message = $form_state['values']['message'];
  if (simple_mail_send('no-reply@angole.univ-ag.fr', 'quitus@univ-ag.fr', 'Problème d\'obtention de quitus', $message)) {
    drupal_set_message("Message envoyé.", 'status');
  } else {
    drupal_set_message("Problème lors de l'envoi du message.", 'status');
  }
}

function scdhorizon_cas_user_presave(&$edit, $account) {

  // borrower#

  $ldap_uid = $edit['field_ldap_uid']['und']['0']['value'];

  global $databases;
  $H = $databases['horizon']['default'];
  $dbh = new PDO($H['driver'].":host=".$H['host'].":".$H['port'].";dbname=".$H['database'], $H['username'], $H['password']);

  $sth = $dbh->prepare("SELECT * FROM borrower WHERE ville1='$ldap_uid'");
  $sth->execute();
  $huser = $sth->fetch();

  $edit['field_horizon_uid']['und'][0]['value'] = $huser['borrower#'];;

  // pole2

  $ldapattrs = cas_ldap_attributes($account->cas_name);

  $pole2 = 11;  
  if ($ldapattrs['pole2'][0] == "Guadeloupe")
    $pole2 = 10;
  $edit['field_ldap_pole2']['und'][0]['tid'] = $pole2;

  // affiliation

  $vocabulary = taxonomy_vocabulary_machine_name_load('Affiliation');
  $terms = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));

  $affiliation;
  foreach(explode(',', $ldapattrs['edupersonaffiliation'][0]) as $aff)
  {
    foreach($terms as $term)
    {
      if ($aff == $term->name)
        $edit['field_ldap_affiliation']['und'][0]['tid'] = $term->tid;
    }
  }

  // horizon_division

  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'library')
    ->fieldCondition('field_id_bibliotheque', 'value', $huser['location'])
    ->propertyCondition('status', NODE_PUBLISHED);

  $result = $query->execute();

  if($result) {
    foreach($result['node'] as $k => $v)
    {
      $edit['field_horizon_division']['und'][0]['nid'] = $k;
    }
  }
  else
  {
    drupal_set_message("Code bibliothèque ne correspondant à rien sur le site : " . $huser['location'], 'warning', false);
  }

  $dbh = null;
}

function scdhorizon_currentdocs($user) {
  if (! array_key_exists('und', $user->field_horizon_uid))
  {
    return "<p>Votre inscription à la BU n'a pas été trouvée.</p>";
  }

  $bn = $user->field_horizon_uid['und'][0]['value'];

  global $databases;
  $H = $databases['horizon']['default'];
  $dbh = new PDO($H['driver'].":host=".$H['host'].":".$H['port'].";dbname=".$H['database'], $H['username'], $H['password']);

  $sth = $dbh->prepare("SELECT convert(varchar(10),dateadd(dd,last_cko_date, convert(date, '01/01/1970')),3),location,title,convert(varchar(10),dateadd(dd,due_date, convert(date, '01/01/1970')),3) FROM item_with_borrower WHERE borrower#=$bn");

  $sth->execute();

  $docs = $sth->fetchAll();

  $dbh = null;

  if (! count($docs)) {
    return "<p>Aucun document en cours.</p>";
  }

  $out = "<table class=\"table table-striped\">";
  $out .= "<tr><th>Titre</th><th>Bibliothèque</th><th>Prêt le</th><th>Retour le</th></tr>";
  foreach ($docs as $doc) {
    $out .= "<tr>
               <td>".iconv('CP437', 'UTF-8', $doc['title'])."</td>
               <td>".$doc['location']."</td>
               <td>".$doc['computed']."</td>
               <td>".$doc['computed1']."</td>
             </tr>";
  }
  $out .= "</table>";

  return $out;
}

?>
